#Explanation


- Sorting using Counting sort


Explanation:

In the counting sort algorithm, initially, the elements of an array by counting the number of occurrences of each unique element in the array. The count is stored in an auxiliary array and the sorting is done by mapping the count as an index of the auxiliary array.

Test Cases:

1. arr[] = {1,4,1,3,2,4,3,7};
2. arr[] = { 'g', 'e', 'e', 'k', 's', 'f', 'o','r', 'g', 'e', 'e', 'k', 's' }

Example

Input: [1,4,1,3,2,4,3,7]

Output: [1, 1, 2, 3, 3, 4, 4, 7 ]


#Explanation END


package vaibhav;

import java.util.*;

public class Count {
	
	public static void count(int arr[]) {
		int Largest = Integer.MIN_VALUE;
		for(int i=0; i<arr.length; i++) {
			Largest = Math.max(Largest, arr[i]);
		}
		
		int count[] = new int[Largest +1];
		
		for(int i=0; i<arr.length; i++) {
			count[arr[i]]++;
		}
		
		int j =0;
		for(int i=0; i<count.length; i++){
			while(count[i] > 0) {
				arr[j] = i;
				j++;
				count[i] --;
			}
		}
	}
	
	public static void print(int arr[]) {
		for(int i=0; i<arr.length; i++) {
			System.out.print(arr[i] + " ");
		}
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int arr[] = {1,4,1,3,2,4,3,7};
		count(arr);
		print(arr);
	}

}
